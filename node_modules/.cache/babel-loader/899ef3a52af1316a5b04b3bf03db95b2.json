{"ast":null,"code":"var _jsxFileName = \"/Users/abraham_reta/Desktop/myprojects/stylecom/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [facts, setFacts] = useState([]);\n\n  async function getFacts() {\n    let response = await fetch('https://cat-fact.herokuapp.com/facts');\n    let data = await response.json(); //  console.log('abrahma', data)\n\n    setFacts(data);\n  }\n\n  useEffect(() => {\n    getFacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cat Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: facts.map((fact, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: fact.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"00cML/e5WsoY7CM/Z1LqoA34S9g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","facts","setFacts","getFacts","response","fetch","data","json","map","fact","idx","text"],"sources":["/Users/abraham_reta/Desktop/myprojects/stylecom/src/App.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\n\n  const [facts, setFacts] = useState([])\n\n     \n  async function getFacts (){\n let response = await fetch ('https://cat-fact.herokuapp.com/facts')\n let data = await response.json()\n //  console.log('abrahma', data)\n  setFacts(data)\n}\n\nuseEffect(()=>{\n    getFacts();\n }, []);\n\n return (\n     <div>\n     <h1>Cat Facts</h1>\n     <div className=\"list\"> \n   {\n          facts.map((fact, idx)=> <div key ={idx}>{fact.text}</div>)\n   }\n     </div>\n </div>\n )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;;;AAIA,SAASC,GAAT,GAAe;EAAA;;EAGb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;EAGA,eAAeK,QAAf,GAA0B;IAC3B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAF,CAA1B;IACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB,CAF2B,CAG3B;;IACCL,QAAQ,CAACI,IAAD,CAAR;EACD;;EAEDP,SAAS,CAAC,MAAI;IACVI,QAAQ;EACV,CAFO,EAEL,EAFK,CAAT;EAIC,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAK,SAAS,EAAC,MAAf;MAAA,UAEKF,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAAc;QAAA,UAAiBD,IAAI,CAACE;MAAtB,GAAWD,GAAX;QAAA;QAAA;QAAA;MAAA,QAAxB;IAFL;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUA;;GA3BQV,G;;KAAAA,G;AA6BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}